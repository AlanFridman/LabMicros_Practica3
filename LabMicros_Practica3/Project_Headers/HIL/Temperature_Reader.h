 /*! **********************************************************************************************
 * 2014  ITESM Campus Guadalajara. Laboratorio de Microcontroladores
 *
 * @file:      Temperature_Reader.h
 * @author(s): 	Alan Fridman   
 *
 * @brief (User's Manual):
 *    This is a simple GPIO driver for the 9S08QG8 MCU. It provides only macro-like functions to
 *    reduce code footprint.
 *
 **************************************************************************************************/

#ifndef TEMPERATURE_READER_H_
#define TEMPERATURE_READER_H_


/*************************************************************************************************/
/*********************						Includes						**********************/
/*************************************************************************************************/
#include "types.h"
#include "derivative.h" /* include peripheral declarations */
#include "HAL\ADC.h"
/*************************************************************************************************/
/*********************						Defines							**********************/
/*************************************************************************************************/
#define LIMIT_TEMPERATURE 40



/*************************************************************************************************/
/*********************						Typedefs						**********************/
/*************************************************************************************************/

/*************************************************************************************************/
/*********************			 	 Functions Like Macros					**********************/
/*************************************************************************************************/

/* DO NOT MODIFY OR USE THESE ********************************************************************/

/*************************************************************************************************/



/*************************************************************************************************/
/*********************					Extern Variables					**********************/
/*************************************************************************************************/

/*************************************************************************************************/
/*********************                  Extern Constants                    **********************/
/*************************************************************************************************/

/*************************************************************************************************/
/*********************					Function Prototypes					**********************/
/*************************************************************************************************/
/*\name Temperature_Init
*\brief Initializes the ADC to recieve the voltage from the temperature sensor LM35
*\param void
*\return void
 -----------------------------------------------------------------------------------------------*/
void Temperature_Init(void);

/*\name Temperature_read
 *\brief Reads the value from ADC_Read() and adjusts it to the voltage, deviding it into 545. So it doesn't works with decimals, it is multiplied by 100
 *\param void
 *\return char
 -----------------------------------------------------------------------------------------------*/
char Temperature_read(void);

/*\name Temperature_overlimit
 *\brief Compares the Temperature from the sensor to the acceptable limit (LIMIT_TEMPERATURE).
 *\param void
 *\return char
 -----------------------------------------------------------------------------------------------*/
Temperature_overlimit(void);



/*************************************************************************************************/
#endif /* TEMPERATURE_READER_H_ */
 
